upstream backend {
    least_conn;
    server 82.157.206.219:8080;
    server 152.136.150.31:8080;
}

map $request_uri $username {
     default "";
     ~^/public/login\?(.*)username=([^&]+) $2;
}


#add the rate limit by username
limit_req_zone $username zone=mylimitByName:10m rate=5r/m;

#add the rate limit by IP
limit_req_zone $binary_remote_addr zone=mylimitByIP:10m rate=5r/s;

#add the rate limit by token in header
limit_req_zone $http_token zone=mylimitByToken:10m rate=400r/s;


server {
    listen 8080 default_server;
    server_name api.datalogical.com.cn;

    #add customized error page
    error_page 429 = /error.json;
    location = /error.json {
        return 200 '{"code": 429, "msg": "Request too many times"}';
    }
    
    #apply the limitation to the specific url
    location /public/login {
        limit_req zone=mylimitByIP burst=5 nodelay;
        limit_req_status 429;
        proxy_pass http://backend; # add suffix path `/_stcore/stream` when it's not a staitc one
    }
    
    # apply the special path to redirect url.for example, redirect '/external/pugongying/*' to 'specialIp:specialPort'
    location /external/pugongying/ {
        proxy_pass http://specialIp:specialPort;
    }

    #apply the limitation to the token in header
    location / {
        limit_req zone=mylimitByToken burst=5 nodelay;
        limit_req_status 429;
        proxy_pass http://backend;

    }
}

# general commands
# 1. checking the grammar is ok: 
nginx -t
# 2. restart the running nginx: 
nginx -s reload
